Websockets are a communication protocol used to build real-time features by establishing a two-way(Bidirectional) connection between a client and a server.
 over a single TCP connection.

WebSockets enable a persistent, two-way communication channel between the client and server.

Unlike the traditional HTTP protocol, where the client sends a request to the server and waits for a response, 
WebSockets allow both the client and server to send messages to each other independently and continuously after the connection is established.


Egs : 


1.WHATSAPP WEB
Facilitating real-time interactions like message sending, read receipts, and typing indicators. 


2. WebSockets can be used for real-time chat, viewer counts for videos, and other interactive features during live broadcasts.


3. Live Notifications
Social media platforms use WebSockets to push real-time notifications to users when they receive a new message, like, or comment.
Instead of the client constantly checking for new notifications, the server can push updates to the client as soon as they occur.



4. Real-Time Collaboration Tools
Applications like Google Docs may use WebSockets to enable multiple users to edit a document simultaneously. 
Changes made by one user are instantly reflected for all others, creating a seamless collaborative experience.

5. LeaderBoard
Imagine an online  game where the leaderboard updates instantly as players score points, showing real-time rankings of all players.


Websockets are vulnerable to attacks
Implement secure WebSocket connections (wss://), authenticate users, and validate input to protect against common vulnerabilities.



Web socket VS HTTP VS POLLIMG VS LONG POLLING : 



HTTP - reuqest /response model, not good for rela time updates


POLLIMG : A connection is established, a client keeps polling   frequntly to check for updates, once it receove as request, it closes the connection
          this simulates real time updaes.



LONG POLLING  :  The client intitates a connection and waits for the repsonse, it keeps the conection open untik there's a response.
once the response is set it closes the connecyion.

If there;s a timeout it opens and new connection (new request )
 and waits till the response.

Resource Usage: Long-polling can lead to resource exhaustion on the server as it must manage many open connections and handle frequent reconnections.



Bi-Directional: Unlike HTTP, polling, and long-polling, WebSockets allow for two-way communication.

Low Latency: Because the connection remains open, data can be sent and received with minimal delay.

Efficiency: WebSockets are more efficient in terms of resource usage and bandwidth.
